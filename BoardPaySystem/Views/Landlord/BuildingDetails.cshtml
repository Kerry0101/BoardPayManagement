@model BoardPaySystem.Models.Building
@{
    ViewData["Title"] = "Building Details";
    Layout = "_LandlordLayout";
}

<div class="content-section">
    <div class="page-header">
        <nav aria-label="breadcrumb" class="custom-breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a asp-action="ManageBuildings">
                        <i class="fas fa-building"></i> Buildings
                    </a>
                </li>
                <li class="breadcrumb-item active">
                    <i class="fas fa-info-circle"></i> @Model.BuildingName Details
                </li>
            </ol>
        </nav>
    </div>

    <div class="building-details">
        <div class="building-title-section">
            <div class="building-name">
                <i class="fas fa-building"></i>
                <h3>@Model.BuildingName</h3>
            </div>
            <div class="header-actions">
                <a asp-controller="Floor" asp-action="ManageFloors" asp-route-buildingId="@Model.BuildingId" 
                   class="btn-primary" title="Manage Floors">
                    <i class="fas fa-layer-group"></i> Manage Floors
                </a>
                <a asp-action="EditBuilding" asp-route-id="@Model.BuildingId" 
                   class="btn-secondary" title="Edit Building">
                    <i class="fas fa-edit"></i> Edit Building
                </a>
            </div>
        </div>

        <div class="info-grid">
            <!-- Basic Information -->
            <div class="info-card">
                <h4><i class="fas fa-info-circle"></i> Basic Information</h4>
                <div class="info-content">
                    <p>
                        <strong><i class="fas fa-map-marker-alt"></i> Address:</strong>
                        <span>@Model.Address</span>
                    </p>
                    <p>
                        <strong><i class="fas fa-layer-group"></i> Total Floors:</strong>
                        <span>@(Model.Floors?.Count ?? 0)</span>
                    </p>
                    <p>
                        <strong><i class="fas fa-door-open"></i> Total Rooms:</strong>
                        <span>@(Model.Floors?.Sum(f => f.Rooms?.Count ?? 0) ?? 0)</span>
                    </p>
                    <p>
                        <strong><i class="fas fa-bed"></i> Occupied Rooms:</strong>
                        <span>@(Model.Floors?.Sum(f => f.Rooms?.Count(r => r.IsOccupied) ?? 0) ?? 0)</span>
                    </p>
                </div>
            </div>

            <!-- Default Rates -->
            <div class="info-card">
                <h4><i class="fas fa-money-bill"></i> Default Rates</h4>
                <div class="info-content">
                    <p>
                        <strong><i class="fas fa-home"></i> Monthly Rent:</strong>
                        <span>₱@Model.DefaultMonthlyRent.ToString("N2")</span>
                    </p>
                    <p>
                        <strong><i class="fas fa-tint"></i> Water Fee:</strong>
                        <span>₱@Model.DefaultWaterFee.ToString("N2")</span>
                    </p>
                    <p>
                        <strong><i class="fas fa-bolt"></i> Electricity Fee:</strong>
                        <span>₱@Model.DefaultElectricityFee.ToString("N2")/kWh</span>
                    </p>
                    <p>
                        <strong><i class="fas fa-wifi"></i> WiFi Fee:</strong>
                        <span>₱@Model.DefaultWifiFee.ToString("N2")</span>
                    </p>
                    <p>
                        <strong><i class="fas fa-exclamation-circle"></i> Late Fee:</strong>
                        <span>@Model.LateFee.ToString("N2")%</span>
                    </p>
                </div>
            </div>
        </div>

        <!-- Floors List -->
        <div class="floors-section mt-4">
            <h4><i class="fas fa-layer-group"></i> Floors</h4>
            @if (!Model.Floors?.Any() ?? true)
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i>
                    No floors have been added to this building yet.
                </div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Floor Name</th>
                                <th>Floor Number</th>
                                <th>Total Rooms</th>
                                <th>Occupied Rooms</th>
                                <th>Occupancy Rate</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var floor in Model.Floors.OrderBy(f => f.FloorNumber))
                            {
                                var totalRooms = floor.Rooms?.Count ?? 0;
                                var occupiedRooms = floor.Rooms?.Count(r => r.IsOccupied) ?? 0;
                                var occupancyRate = totalRooms == 0 ? 0 : (occupiedRooms * 100.0 / totalRooms);

                                <tr>
                                    <td>@floor.FloorName</td>
                                    <td>@floor.FloorNumber</td>
                                    <td>@totalRooms</td>
                                    <td>@occupiedRooms</td>
                                    <td>
                                        <div class="progress" style="height: 20px;">
                                            <div class="progress-bar bg-success" role="progressbar" 
                                                 style="width: @occupancyRate%;" 
                                                 aria-valuenow="@occupancyRate" 
                                                 aria-valuemin="0" 
                                                 aria-valuemax="100">
                                                @occupancyRate.ToString("F1")%
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div class="btn-group">
                                            <a asp-controller="Room" asp-action="ManageRooms" 
                                               asp-route-floorId="@floor.FloorId" 
                                               class="btn-icon" title="Manage Rooms">
                                                <i class="fas fa-door-open"></i>
                                            </a>
                                            <a asp-controller="Floor" asp-action="EditFloor" 
                                               asp-route-id="@floor.FloorId" 
                                               class="btn-icon" title="Edit Floor">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

<!-- Edit Building Warning Modal -->
<div class="modal fade" id="editBuildingWarningModal" data-bs-backdrop="static" tabindex="-1" aria-labelledby="editBuildingWarningModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-warning">
                <h5 class="modal-title" id="editBuildingWarningModalLabel">
                    <i class="fas fa-exclamation-triangle"></i>
                    Important Notice
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="alert alert-warning">
                    <i class="fas fa-info-circle"></i>
                    <strong>Please Note:</strong>
                </div>
                <ul class="warning-list">
                    <li>Any changes to building fees (rent, utilities, etc.) will only take effect at the start of the next billing cycle.</li>
                    <li>Existing tenants will be notified of any changes in their fees.</li>
                    <li>Current month's billing will not be affected by these changes.</li>
                </ul>
                <p class="text-muted mt-3">
                    <i class="fas fa-clock"></i>
                    Changes will be applied starting: <strong>@(DateTime.Now.AddMonths(1).ToString("MMMM 1, yyyy"))</strong>
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times"></i>
                    Cancel
                </button>
                <button type="button" class="btn-warning" id="proceedToEditBtn">
                    <i class="fas fa-edit"></i>
                    Proceed with Edit
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .page-header {
        margin-bottom: 1rem;
    }

    .custom-breadcrumb {
        background: white;
        padding: 0.75rem 1rem;
        border-radius: 6px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.05);
        margin-bottom: 0;
    }

    .breadcrumb {
        margin: 0;
        padding: 0;
        background: transparent;
    }

    .breadcrumb-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #6c757d;
    }

    .breadcrumb-item a {
        color: #3498db;
        text-decoration: none;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: color 0.2s;
    }

    .breadcrumb-item a:hover {
        color: #2980b9;
    }

    .breadcrumb-item.active {
        color: #2c3e50;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        content: "›";
        color: #95a5a6;
    }

    .building-details {
        margin-top: 1rem;
        background: white;
        border-radius: 10px;
        padding: 20px;
    }

    .building-title-section {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1.5rem;
        background: white;
        padding: 0.75rem 1rem;
        border-radius: 6px;
        box-shadow: 0 1px 2px rgba(0,0,0,0.05);
    }

    .building-name {
        display: flex;
        align-items: center;
        gap: 0.75rem;
        color: #2c3e50;
    }

    .building-name i {
        font-size: 1.25rem;
        color: #3498db;
    }

    .building-name h3 {
        margin: 0;
        font-size: 1.25rem;
        font-weight: 500;
    }

    .header-actions {
        display: flex;
        gap: 0.75rem;
    }

    .btn-primary, .btn-secondary {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.875rem;
        transition: all 0.2s;
        text-decoration: none;
    }

    .btn-primary {
        background: #3498db;
        color: white;
        border: none;
    }

    .btn-primary:hover {
        background: #2980b9;
        color: white;
    }

    .btn-secondary {
        background: #e9ecef;
        color: #495057;
        border: none;
    }

    .btn-secondary:hover {
        background: #dee2e6;
        color: #212529;
    }

    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-bottom: 30px;
    }

    .info-card {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }

    .info-card h4 {
        color: #2c3e50;
        margin-bottom: 15px;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .info-content p {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
        padding-bottom: 10px;
        border-bottom: 1px dashed #dee2e6;
    }

    .info-content p:last-child {
        margin-bottom: 0;
        padding-bottom: 0;
        border-bottom: none;
    }

    .info-content strong {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #6c757d;
    }

    .info-content span {
        font-weight: 500;
        color: #2c3e50;
    }

    .floors-section {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 20px;
    }

    .floors-section h4 {
        margin-bottom: 20px;
        color: #2c3e50;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .progress {
        height: 20px;
        background-color: #e9ecef;
        border-radius: 10px;
    }

    .progress-bar {
        border-radius: 10px;
        transition: width 0.6s ease;
    }

    @@media (max-width: 768px) {
        .building-title-section {
            flex-direction: column;
            gap: 1rem;
            text-align: center;
            padding: 1rem;
        }

        .building-name {
            justify-content: center;
        }

        .header-actions {
            flex-direction: column;
            width: 100%;
        }

        .btn-primary, .btn-secondary {
            justify-content: center;
        }

        .info-grid {
            grid-template-columns: 1fr;
        }
    }

    .warning-list {
        padding-left: 1.5rem;
        margin-top: 1rem;
    }

    .warning-list li {
        margin-bottom: 0.75rem;
        color: #666;
    }

    .warning-list li:last-child {
        margin-bottom: 0;
    }

    .modal-header.bg-warning {
        background-color: #ffc107;
        color: #000;
    }

    .btn-warning {
        background-color: #ffc107;
        color: #000;
        border: none;
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 6px;
        font-size: 0.875rem;
        transition: all 0.2s;
    }

    .btn-warning:hover {
        background-color: #ffb300;
        color: #000;
    }
</style>

@section Scripts {
    <script>
        let activeModal = null;

        // Function to force cleanup all modal-related elements and styles
        function forceCleanupModals() {
            // Remove all modal backdrops first
            const backdrops = document.querySelectorAll('.modal-backdrop');
            backdrops.forEach(backdrop => {
                backdrop.classList.remove('show');
                backdrop.remove();
            });

            // Clean up body
            document.body.classList.remove('modal-open');
            document.body.style.overflow = '';
            document.body.style.paddingRight = '';

            // Reset all modals
            document.querySelectorAll('.modal').forEach(modal => {
                const bsModal = bootstrap.Modal.getInstance(modal);
                if (bsModal) {
                    bsModal.dispose();
                }
                modal.classList.remove('show');
                modal.style.display = 'none';
                modal.setAttribute('aria-hidden', 'true');
                modal.removeAttribute('aria-modal');
                modal.removeAttribute('role');
            });

            // Force remove any remaining backdrop
            const remainingBackdrops = document.querySelectorAll('.modal-backdrop');
            remainingBackdrops.forEach(backdrop => backdrop.remove());

            // Reset active modal
            activeModal = null;
        }

        // Initialize all modals with proper options
        document.addEventListener('DOMContentLoaded', function() {
            const modals = ['editBuildingWarningModal'];

            // Initial cleanup
            forceCleanupModals();

            modals.forEach(modalId => {
                const modalElement = document.getElementById(modalId);
                if (!modalElement) return;

                // Initialize modal with specific options
                const modal = new bootstrap.Modal(modalElement, {
                    backdrop: false // Disable Bootstrap's backdrop handling
                });

                // Handle modal events
                modalElement.addEventListener('hidden.bs.modal', forceCleanupModals);
                modalElement.addEventListener('show.bs.modal', function() {
                    if (activeModal) {
                        activeModal.hide();
                        forceCleanupModals();
                    }
                    activeModal = modal;
                });
            });

            // Handle clicks outside modals
            document.addEventListener('click', function(e) {
                if (e.target.classList.contains('modal')) {
                    forceCleanupModals();
                }
            });

            // Handle escape key
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Escape') {
                    forceCleanupModals();
                }
            });

            // Handle Edit Building button click
            const editBtn = document.querySelector('a[title="Edit Building"]');
            if (editBtn) {
                editBtn.addEventListener('click', function(e) {
                    e.preventDefault();
                    const editUrl = this.getAttribute('href');
                    showModal('editBuildingWarningModal');
                    document.getElementById('proceedToEditBtn').onclick = function() {
                        window.location.href = editUrl;
                    };
                });
            }
        });

        function showModal(modalId) {
            forceCleanupModals();
            const modalElement = document.getElementById(modalId);
            const modal = new bootstrap.Modal(modalElement, {
                backdrop: false
            });
            modal.show();
            activeModal = modal;
        }
    </script>
} 